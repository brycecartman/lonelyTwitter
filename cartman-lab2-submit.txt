diff --git a/src/ca/ualberta/cs/lonelytwitter/ConcreteTweetView.java b/src/ca/ualberta/cs/lonelytwitter/ConcreteTweetView.java
new file mode 100644
index 0000000..b6129cc
--- /dev/null
+++ b/src/ca/ualberta/cs/lonelytwitter/ConcreteTweetView.java
@@ -0,0 +1,9 @@
+package ca.ualberta.cs.lonelytwitter;
+
+public class ConcreteTweetView implements TweetView {
+
+	public String formatTweet(LonelyTweetModel lt) {
+		return lt.getTimestamp().toString() + " | " + lt.getText();
+	}
+
+}
diff --git a/src/ca/ualberta/cs/lonelytwitter/ImportantTweetModel.java b/src/ca/ualberta/cs/lonelytwitter/ImportantTweetModel.java
new file mode 100644
index 0000000..6cf0be7
--- /dev/null
+++ b/src/ca/ualberta/cs/lonelytwitter/ImportantTweetModel.java
@@ -0,0 +1,27 @@
+package ca.ualberta.cs.lonelytwitter;
+
+import java.util.Date;
+
+public class ImportantTweetModel extends LonelyTweetModel {
+
+	public ImportantTweetModel(String text, Date timestamp) {
+		super(text, timestamp);
+	}
+
+	public ImportantTweetModel(String text) {
+		super(text);
+	}
+	
+	public void setText(String text) {
+		this.text = text;
+	}
+	
+	@Override
+	public void setImportant(boolean important) throws Exception{
+		if (!important){
+			throw new IllegalArgumentException();
+		}
+		this.important = important;
+	}
+
+}
diff --git a/src/ca/ualberta/cs/lonelytwitter/LonelyTweetModel.java b/src/ca/ualberta/cs/lonelytwitter/LonelyTweetModel.java
new file mode 100644
index 0000000..c079c15
--- /dev/null
+++ b/src/ca/ualberta/cs/lonelytwitter/LonelyTweetModel.java
@@ -0,0 +1,41 @@
+package ca.ualberta.cs.lonelytwitter;
+
+import java.util.Date;
+
+public abstract class LonelyTweetModel {
+	protected String text;
+	protected Date timestamp;
+	protected boolean important;
+
+	
+	public String getText() {
+		return text;
+	}
+	
+	public abstract void setText(String text);
+	
+	public Date getTimestamp() {
+		return timestamp;
+	}
+	
+	public void setTimestamp(Date timestamp) {
+		this.timestamp = timestamp;
+	}
+
+	public LonelyTweetModel(String text, Date timestamp) {
+		super();
+		this.text = text;
+		this.timestamp = timestamp;
+	}
+	
+	public LonelyTweetModel(String text) {
+		super();
+		this.text = text;
+		this.timestamp = new Date();
+	}
+	
+	public boolean getImportant() {
+        return important;
+}
+	public abstract void setImportant(boolean important) throws Exception;
+}
diff --git a/src/ca/ualberta/cs/lonelytwitter/NormalTweetModel.java b/src/ca/ualberta/cs/lonelytwitter/NormalTweetModel.java
new file mode 100644
index 0000000..6b0f8d2
--- /dev/null
+++ b/src/ca/ualberta/cs/lonelytwitter/NormalTweetModel.java
@@ -0,0 +1,23 @@
+package ca.ualberta.cs.lonelytwitter;
+
+public class NormalTweetModel extends LonelyTweetModel {
+
+
+	public NormalTweetModel(String text) {
+		super(text);
+	}
+
+	@Override
+	public void setText(String text) {
+		
+	}
+	
+	@Override
+	public void setImportant(boolean important) throws Exception{
+		if (important){
+			throw new IllegalArgumentException();
+		}
+		this.important = important;
+	}
+
+}
diff --git a/src/ca/ualberta/cs/lonelytwitter/TweetListModel.java b/src/ca/ualberta/cs/lonelytwitter/TweetListModel.java
new file mode 100644
index 0000000..f76b891
--- /dev/null
+++ b/src/ca/ualberta/cs/lonelytwitter/TweetListModel.java
@@ -0,0 +1,16 @@
+package ca.ualberta.cs.lonelytwitter;
+
+import java.util.ArrayList;
+
+public class TweetListModel {
+	private ArrayList<LonelyTweetModel> list;
+	
+	public ArrayList<LonelyTweetModel> getList() {
+		return list;
+	}
+
+	public void setList(ArrayList<LonelyTweetModel> list) {
+		this.list = list;
+	}
+	
+}
diff --git a/src/ca/ualberta/cs/lonelytwitter/TweetView.java b/src/ca/ualberta/cs/lonelytwitter/TweetView.java
new file mode 100644
index 0000000..213e293
--- /dev/null
+++ b/src/ca/ualberta/cs/lonelytwitter/TweetView.java
@@ -0,0 +1,5 @@
+package ca.ualberta.cs.lonelytwitter;
+
+public interface TweetView {
+	String formatTweet(LonelyTweetModel lt);
+}
